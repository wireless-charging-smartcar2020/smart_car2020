C51 COMPILER V9.57.0.0   PWM                                                               03/05/2021 15:00:42 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\Objects\pwm.obj
COMPILER INVOKED BY: F:\MDK5.21A\C51\BIN\C51.EXE pwm.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\main_control) DEBUG OBJECTEXTE
                    -ND PRINT(.\Listings\pwm.lst) TABS(2) OBJECT(.\Objects\pwm.obj)

line level    source

   1          /*********************************************************************************************************
   2          ** 工程功能 ：PWM输出
   3          *********************************************************************************************************/
   4          #include "pwm.h"
   5          #include "sensor.h"
   6          uint PERCENT_L=10,PERCENT_R=10,pwm_L=0,pwm_R=0;     //pwm占空比 0~100
   7          uchar timeL,timeR; // 定义占空比的变量
   8          
   9          enum list action;
  10          
  11          void goforward()
  12          {action=forward;}
  13          
  14          void goback()
  15          {action=back;}
  16          
  17          void goLeft()
  18          {action=Left;}
  19          
  20          void goRight()
  21          {action=Right;}
  22          
  23          void gostop()
  24          {action=stop;}
  25          
  26          void tim0() interrupt 1
  27          {
  28   1      
  29   1      TR0=0;//赋初值时，关闭定时器
  30   1        TH0 = (65536-FSCLK/12/20000)/256;  //配置定时器的高8位  0.05ms
  31   1        TL0 = (65536-FSCLK/12/20000)%256;  //配置定时器的低8位
  32   1      TR0=1;//打开定时器
  33   1        
  34   1       
  35   1      
  36   1      timeL++;
  37   1      timeR++;
  38   1      
  39   1      if(timeL>=100) 
  40   1      { timeL=0; 
  41   2        getsensor(uart_flag);
  42   2      }
  43   1      if(timeR>=100) 
  44   1         timeR=0; 
  45   1      if(timeL<=PERCENT_L) //占空比%30,可改
  46   1        pwm_L=1;
  47   1      else if(timeL>PERCENT_L)
  48   1        pwm_L=0;
  49   1      if(timeR<=PERCENT_R) //占空比%30,可改
  50   1        pwm_R=1;
  51   1      else if(timeR>PERCENT_R)
  52   1        pwm_R=0;
  53   1      
  54   1        switch(action)
C51 COMPILER V9.57.0.0   PWM                                                               03/05/2021 15:00:42 PAGE 2   

  55   1        {
  56   2          case forward:
  57   2            Left_A=pwm_L;
  58   2            Left_B=0;
  59   2            Right_A=pwm_R;
  60   2            Right_B=0;
  61   2            break;
  62   2          case back:
  63   2            Left_A=0;
  64   2            Left_B=pwm_L;
  65   2            Right_A=0;
  66   2            Right_B=pwm_R;
  67   2            break;
  68   2          case Left:
  69   2            Left_A=pwm_L;
  70   2            Left_B=0;
  71   2            Right_A=0;
  72   2            Right_B=pwm_R;
  73   2            break;
  74   2          case Right:
  75   2            Left_A=0;
  76   2            Left_B=pwm_L;
  77   2            Right_A=pwm_R;
  78   2            Right_B=0;
  79   2            break;
  80   2          case stop:
  81   2            Left_A=0;
  82   2            Left_B=0;
  83   2            Right_A=0;
  84   2            Right_B=0;
  85   2            break;
  86   2        }
  87   1      }
  88           
  89          
  90          /*********************************************************************************************************
  91          ** 函数功能 ：初始化Timer0
  92          *********************************************************************************************************/
  93          void Timer0_init()
  94          {
  95   1      TMOD=0x01;//定时器0工作方式1             
  96   1        TH0 = (65536-FSCLK/12/20000)/256;  //配置定时器的高8位  0.05ms
  97   1        TL0 = (65536-FSCLK/12/20000)%256;  //配置定时器的低8位
  98   1      EA=1;//开总中断
  99   1       
 100   1      ET0=1;//开定时器0中断
 101   1       
 102   1      TR0=1;//启动定时器0
 103   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    299    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
